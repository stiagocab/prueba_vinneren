{"version":3,"sources":["components/Header.js","Styles.js","components/Containers.js","components/Text.js","views/Carrousel.js","views/Input.js","helpers.js","views/Clock.js","App.js","index.js"],"names":["HeaderApp","Styled","header","theme","primary","Menu","ul","Button","button","isSelected","accent","Header","selected","onChange","onClick","window","open","defaultProps","GlobalStyle","createGlobalStyle","Theme","background","text","error","Container","section","color","Title","p","SmallText","Carrousel","carruselRef","useRef","useState","currentSlide","setCurrentSlide","maxSlides","carrouselItems","length","useEffect","timer","setTimeout","nextSlide","clearTimeout","nextPosition","current","clientWidth","scrollTo","left","behavior","CarrouselContainer","Sliders","ref","onScroll","Math","floor","scrollLeft","React","Children","toArray","map","photoKey","index","Slide","src","imgUrl","alt","Controls","className","styled","div","article","Input","counter","setCounter","isError","setIsError","hasText","setHasText","InputContainer","onSubmit","e","preventDefault","target","reset","InputText","textLength","value","split","nextCounter","name","disabled","textarea","doubleNumber","Number","ClockComponent","seconds","setSeconds","minutes","setMinutes","hours","setHours","isLoad","setIsLoad","initialHour","Date","getSeconds","getMinutes","getHours","nextSecond","nextMinute","nextHour","ClockBox","ClockText","style","opacity","App","renderItemComponent","useMemo","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd580e67.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst HeaderApp = Styled.header`\r\n    background-color: ${({ theme }) => theme.primary};\r\n    padding: 1em;\r\n`;\r\n\r\nconst Menu = Styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n\r\n\r\n  & li {\r\n    margin-right: 1em;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    & li {\r\n      margin: 0 0.5em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = Styled.button`\r\n  border-bottom: 2px solid transparent;\r\n  border-bottom-color: ${({ isSelected, theme }) =>\r\n    isSelected ? theme.accent : \"transparent\"};\r\n  color: white;\r\n  text-decoration: none;\r\n  font-size: 1em;\r\n\r\n  padding: 0.5em 1em;\r\n  padding: 0.5em 1em;\r\n\r\n  &:hover {\r\n    border-bottom-color: white;\r\n    background-color: rgba(100, 100, 100, 0.1);\r\n  }\r\n\r\n  \r\n  @media screen and (max-width: 600px) {\r\n    & li {\r\n      padding: 0.5em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = ({ selected, onChange }) => {\r\n  return (\r\n    <HeaderApp>\r\n      <Menu>\r\n        <li>\r\n          <Button\r\n            onClick={() => {\r\n              onChange(0);\r\n            }}\r\n            isSelected={selected === 0}\r\n          >\r\n            Reloj\r\n          </Button>\r\n        </li>\r\n        <li>\r\n          <Button\r\n            onClick={() => {\r\n              onChange(1);\r\n            }}\r\n            isSelected={selected === 1}\r\n          >\r\n            Carrusel\r\n          </Button>\r\n        </li>\r\n        <li>\r\n          <Button\r\n            onClick={() => {\r\n              onChange(2);\r\n            }}\r\n            isSelected={selected === 2}\r\n          >\r\n            Input\r\n          </Button>\r\n        </li>\r\n        <li>\r\n          <Button\r\n            onClick={() => {\r\n              onChange(3);\r\n            }}\r\n            isSelected={selected === 3}\r\n          >\r\n            Todos\r\n          </Button>\r\n        </li>\r\n        <li>\r\n          <Button\r\n            onClick={() =>\r\n              window.open(\"https://github.com/stiagocab/prueba_vinneren\")\r\n            }\r\n          >\r\n            GitHub\r\n          </Button>\r\n        </li>\r\n      </Menu>\r\n    </HeaderApp>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nHeader.defaultProps = {\r\n  selected: 0,\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 1em;\r\n    background-color: #f3f3f3;\r\n    color: #1d1f27;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  p, h1, ul {\r\n      margin: 0;\r\n  }\r\n\r\n\r\n  button, a, p, div, section{\r\n    transition: all 420ms ease;\r\n  }\r\n\r\n  button {\r\n    background: transparent;\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n\r\n\r\n  section, input, textarea{\r\n    box-sizing: border-box;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n\r\nexport const Theme = {\r\n  primary: \"#51adcf\",\r\n  background: \"#f3f3f3\",\r\n  accent: \"#F090A6\",\r\n  text: \"#212121\",\r\n  error: \"crimson\",\r\n};\r\n","import Styled from \"styled-components\";\r\n\r\nexport const Container = Styled.section`\r\n    width: 100%;\r\n    padding: 1em;\r\n    padding-bottom: 5em;\r\n    background-color: ${({ color, theme }) => color ?? theme.background}\r\n`;\r\n","import Styled from \"styled-components\";\r\n\r\nexport const Title = Styled.p`\r\n    font-size: 1.2em;\r\n    font-weight: bold;\r\n    margin: 0.5em 0 1em 0;\r\n`;\r\n\r\nexport const SmallText = Styled.p`\r\n    font-size: 0.8em;\r\n    color: ${({ error, theme }) => (error ? theme.error : theme.text)};\r\n`;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container } from \"../components/Containers\";\r\nimport { Title } from \"../components/Text\";\r\n\r\nexport default function Carrousel() {\r\n  const carruselRef = useRef();\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const maxSlides = carrouselItems.length;\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      nextSlide(currentSlide);\r\n    }, 3000);\r\n    return () => clearTimeout(timer);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentSlide]);\r\n\r\n  const handleScroll = () => {\r\n    // current scroll / slide width = index slide\r\n    setCurrentSlide(\r\n      Math.floor(\r\n        carruselRef.current.scrollLeft / carruselRef.current.clientWidth\r\n      )\r\n    );\r\n  };\r\n\r\n  const nextSlide = (currentSlide) => {\r\n    // reset slide\r\n    const nextSlide = currentSlide + 1 === maxSlides ? 0 : currentSlide + 1;\r\n    // scroll position: slide width * index next slide\r\n    const nextPosition = nextSlide * carruselRef.current.clientWidth;\r\n\r\n    // scroll animation\r\n    carruselRef.current.scrollTo({\r\n      left: nextPosition,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    setCurrentSlide(nextSlide);\r\n  };\r\n\r\n  const lastSlide = () => {\r\n    // reset slide\r\n    const nextSlide = currentSlide === 0 ? maxSlides - 1 : currentSlide - 1;\r\n    // scroll position: slide width * index next slide\r\n    const nextPosition = nextSlide * carruselRef.current.clientWidth;\r\n\r\n    // scroll animation\r\n    carruselRef.current.scrollTo({\r\n      left: nextPosition,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    setCurrentSlide(nextSlide);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Carrusel</Title>\r\n      <CarrouselContainer>\r\n        <Sliders ref={carruselRef} onScroll={handleScroll}>\r\n          {React.Children.toArray(\r\n            carrouselItems.map((photoKey, index) => {\r\n              return (\r\n                <Slide>\r\n                  <img\r\n                    src={`${imgUrl}/${photoKey}`}\r\n                    alt={`carousel-${index}`}\r\n                  />\r\n                </Slide>\r\n              );\r\n            })\r\n          )}\r\n        </Sliders>\r\n        <Controls className=\"back\" onClick={lastSlide}>\r\n          {\"<\"}\r\n        </Controls>\r\n        <Controls className=\"next\" onClick={() => nextSlide(currentSlide)}>\r\n          {\">\"}\r\n        </Controls>\r\n      </CarrouselContainer>\r\n    </Container>\r\n  );\r\n}\r\nconst imgUrl = \"https://loremflickr.com/1200/800\";\r\nconst carrouselItems = [\"sunset\", \"forest\", \"northern_lights\", \"iceland\"];\r\n\r\nconst CarrouselContainer = styled.div`\r\n  width: 100%;\r\n  height: 650px;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Sliders = styled.section`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  display: flex;\r\n  overflow-x: auto;\r\n  scroll-snap-type: x mandatory;\r\n  scroll-behavior: smooth;\r\n  -webkit-overflow-scrolling: touch;\r\n\r\n  ::-webkit-scrollbar {\r\n    /* width: 0px; */\r\n    height: 3px;\r\n    background: transparent;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nconst Controls = styled.button`\r\n  width: 1.5em;\r\n  height: 1.5em;\r\n  /* padding: 0.5em; */\r\n  border-radius: 50%;\r\n  display: block;\r\n  font-family: \"Orbitron\", sans-serif;\r\n  font-size: 1.5em;\r\n  color: rgba(171, 183, 183, 0.8);\r\n\r\n  position: absolute;\r\n  top: 50%;\r\n\r\n  &:hover {\r\n    background-color: rgba(250, 250, 250, 0.2);\r\n  }\r\n\r\n  &.back {\r\n    left: 0.5em;\r\n  }\r\n\r\n  &.next {\r\n    right: 0.5em;\r\n  }\r\n`;\r\n\r\nconst Slide = styled.article`\r\n  width: 100%;\r\n\r\n  scroll-snap-align: start;\r\n  flex-shrink: 0;\r\n  border-radius: 10px;\r\n  background: #eee;\r\n  transform-origin: center center;\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 100px;\r\n\r\n  & img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Container } from \"../components/Containers\";\r\nimport { SmallText, Title } from \"../components/Text\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Input() {\r\n  const maxLength = 140;\r\n  const [counter, setCounter] = useState(maxLength);\r\n  const [isError, setIsError] = useState(false);\r\n  const [hasText, setHasText] = useState(false);\r\n\r\n  const onChangeText = (e) => {\r\n    const textLength = e.target.value.split(\"\").length;\r\n    let nextCounter = maxLength - textLength;\r\n    setCounter(nextCounter);\r\n    setIsError(nextCounter < 0);\r\n    setHasText(textLength > 0);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Contador de texto</Title>\r\n      <InputContainer>\r\n        <form onSubmit={handleSubmit}>\r\n          <InputText onChange={onChangeText} name=\"input\" />\r\n\r\n          <button\r\n            className={`send ${!hasText || isError ? \"disable\" : \"\"}`}\r\n            disabled={!hasText || isError}\r\n          >\r\n            Enviar\r\n          </button>\r\n          <SmallText error={isError}>{counter}</SmallText>\r\n        </form>\r\n      </InputContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst InputText = styled.textarea`\r\n  width: 100%;\r\n  height: 200px;\r\n  outline: none;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  padding: 1em;\r\n\r\n  &:focus {\r\n    border-color: ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  max-width: 400px;\r\n  & ${SmallText} {\r\n    margin-top: 1.5em;\r\n    margin-right: 1em;\r\n    float: right;\r\n  }\r\n\r\n  & button {\r\n    margin-top: 1em;\r\n    padding: 0.5em 1em;\r\n\r\n    &.delete {\r\n      float: left;\r\n      color: ${({ theme }) => theme.error};\r\n    }\r\n\r\n    &.send {\r\n      float: right;\r\n      border-radius: 5px;\r\n      background-color: ${({ theme }) => theme.primary};\r\n      color: white;\r\n    }\r\n\r\n    &.disable {\r\n      background-color: grey;\r\n    }\r\n\r\n    @media screen and (max-width: 600px) {\r\n      width: 80%;\r\n    }\r\n  }\r\n`;\r\n","export const doubleNumber = (text) => {\r\n  if (Number(text) <= 9) return `0${text}`;\r\n  return text;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../components/Containers\";\r\nimport { Title } from \"../components/Text\";\r\nimport { doubleNumber } from \"../helpers\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function ClockComponent() {\r\n  const [seconds, setSeconds] = useState();\r\n  const [minutes, setMinutes] = useState();\r\n  const [hours, setHours] = useState();\r\n  const [isLoad, setIsLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initialHour = new Date();\r\n    setSeconds(initialHour.getSeconds());\r\n    setMinutes(initialHour.getMinutes());\r\n    setHours(initialHour.getHours());\r\n    setIsLoad(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      let nextSecond = seconds + 1;\r\n      if (nextSecond === 60) {\r\n        setSeconds(0);\r\n        let nextMinute = minutes + 1;\r\n        if (nextMinute === 60) {\r\n          setMinutes(0);\r\n          let nextHour = hours + 1;\r\n          if (nextHour === 24) {\r\n            setHours(0);\r\n          } else {\r\n            setHours(nextHour);\r\n          }\r\n        } else {\r\n          setMinutes(nextMinute);\r\n        }\r\n      } else {\r\n        setSeconds(nextSecond);\r\n      }\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [seconds, minutes, hours]);\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Reloj</Title>\r\n      <ClockBox>\r\n        {isLoad ? (\r\n          <ClockText>00:00</ClockText>\r\n        ) : (\r\n          <ClockText>\r\n            {doubleNumber(hours)}\r\n            <span style={{ opacity: seconds % 2 === 0 ? 1 : 0 }}>:</span>\r\n            {doubleNumber(minutes)}\r\n          </ClockText>\r\n        )}\r\n      </ClockBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst ClockText = styled.p`\r\n  font-family: \"Orbitron\", sans-serif;\r\n  font-size: 3em;\r\n  color: rgb(33, 235, 31);\r\n  text-align: center;\r\n`;\r\n\r\nconst ClockBox = styled.div`\r\n  padding: 2em;\r\n  background-color: black;\r\n  max-width: 400px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n","import React, { useMemo, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Header from \"./components/Header\";\nimport GlobalStyle, { Theme } from \"./Styles\";\nimport Carrousel from \"./views/Carrousel\";\nimport Input from \"./views/Input\";\nimport ClockComponent from \"./views/Clock\";\n\nfunction App() {\n  const [selected, isSelected] = useState(0);\n\n  const renderItemComponent = useMemo(() => {\n    switch (selected) {\n      case 0:\n        return <ClockComponent />;\n      case 1:\n        return <Carrousel />;\n      case 2:\n        return <Input />;\n      case 3:\n        return (\n          <>\n            <Carrousel />\n            <ClockComponent />\n            <Input />\n          </>\n        );\n      default:\n        return <ClockComponent />;\n    }\n  }, [selected]);\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <GlobalStyle />\n      <section>\n        <Header selected={selected} onChange={(id) => isSelected(id)} />\n        {renderItemComponent}\n      </section>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}